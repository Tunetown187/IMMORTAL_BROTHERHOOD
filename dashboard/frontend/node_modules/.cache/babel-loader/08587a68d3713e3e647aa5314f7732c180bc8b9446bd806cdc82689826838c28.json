{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\p8tty\\\\Downloads\\\\agency-swarm-0.2.0\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EmailManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Grid, Card, CardContent, Button, TextField, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, List, ListItem, ListItemText, ListItemSecondary, Chip, Divider, FormControl, InputLabel, Select, MenuItem, Snackbar, Alert, CircularProgress, Tabs, Tab, Paper } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, Edit as EditIcon, Refresh as RefreshIcon, Send as SendIcon, Email as EmailIcon, AccountCircle as AccountIcon } from '@mui/icons-material';\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nfunction EmailManagement() {\n  _s();\n  const [activeTab, setActiveTab] = useState(0);\n  const [emailAccounts, setEmailAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [emails, setEmails] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const [openCompose, setOpenCompose] = useState(false);\n  const [openTemplate, setOpenTemplate] = useState(false);\n  const [openAddAccount, setOpenAddAccount] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [newEmail, setNewEmail] = useState({\n    to: '',\n    subject: '',\n    body: '',\n    template_id: ''\n  });\n  const [newTemplate, setNewTemplate] = useState({\n    name: '',\n    subject: '',\n    body: '',\n    variables: []\n  });\n  const [newAccount, setNewAccount] = useState({\n    email: '',\n    name: '',\n    smtp_host: '',\n    smtp_port: '',\n    smtp_username: '',\n    smtp_password: '',\n    imap_host: '',\n    imap_port: ''\n  });\n  useEffect(() => {\n    fetchEmailAccounts();\n    fetchEmails();\n    fetchTemplates();\n  }, [selectedAccount]);\n  const fetchEmailAccounts = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/accounts`);\n      setEmailAccounts(response.data);\n      if (response.data.length > 0 && !selectedAccount) {\n        setSelectedAccount(response.data[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching email accounts:', error);\n      setError('Failed to fetch email accounts');\n    }\n  };\n  const fetchEmails = async () => {\n    if (!selectedAccount) return;\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/messages/${selectedAccount}`);\n      setEmails(response.data);\n    } catch (error) {\n      console.error('Error fetching emails:', error);\n      setError('Failed to fetch emails');\n    }\n  };\n  const fetchTemplates = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/templates`);\n      setTemplates(response.data);\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n      setError('Failed to fetch templates');\n    }\n  };\n  const handleAddAccount = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/accounts`, newAccount);\n      setSuccess('Email account added successfully');\n      setOpenAddAccount(false);\n      setNewAccount({\n        email: '',\n        name: '',\n        smtp_host: '',\n        smtp_port: '',\n        smtp_username: '',\n        smtp_password: '',\n        imap_host: '',\n        imap_port: ''\n      });\n      fetchEmailAccounts();\n    } catch (error) {\n      console.error('Error adding email account:', error);\n      setError('Failed to add email account');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSendEmail = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/send/${selectedAccount}`, newEmail);\n      setSuccess('Email sent successfully');\n      setOpenCompose(false);\n      setNewEmail({\n        to: '',\n        subject: '',\n        body: '',\n        template_id: ''\n      });\n      fetchEmails();\n    } catch (error) {\n      console.error('Error sending email:', error);\n      setError('Failed to send email');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveTemplate = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/templates`, newTemplate);\n      setSuccess('Template saved successfully');\n      setOpenTemplate(false);\n      setNewTemplate({\n        name: '',\n        subject: '',\n        body: '',\n        variables: []\n      });\n      fetchTemplates();\n    } catch (error) {\n      console.error('Error saving template:', error);\n      setError('Failed to save template');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTemplateSelect = templateId => {\n    const template = templates.find(t => t.id === templateId);\n    if (template) {\n      setNewEmail({\n        ...newEmail,\n        subject: template.subject,\n        body: template.body,\n        template_id: template.id\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(''),\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 6000,\n      onClose: () => setSuccess(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSuccess(''),\n        severity: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Email Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setOpenAddAccount(true),\n          startIcon: /*#__PURE__*/_jsxDEV(AccountIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 24\n          }, this),\n          sx: {\n            mr: 2\n          },\n          children: \"Add Email Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setOpenCompose(true),\n          startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 24\n          }, this),\n          sx: {\n            mr: 2\n          },\n          disabled: !selectedAccount,\n          children: \"Compose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setOpenTemplate(true),\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 24\n          }, this),\n          children: \"Create Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Email Accounts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                borderBottom: 1,\n                borderColor: 'divider',\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: selectedAccount,\n                onChange: (e, newValue) => setSelectedAccount(newValue),\n                variant: \"scrollable\",\n                scrollButtons: \"auto\",\n                children: emailAccounts.map(account => /*#__PURE__*/_jsxDEV(Tab, {\n                  label: `${account.name} (${account.email})`,\n                  value: account.id\n                }, account.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Recent Emails\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: emails.map(email => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: email.subject,\n                    secondary: `To: ${email.to} | ${new Date(email.sent_at).toLocaleString()}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: email.status,\n                    color: email.status === 'sent' ? 'success' : 'default',\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)]\n              }, email.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Email Templates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: templates.map(template => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outlined\",\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      children: template.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      children: [\"Variables: \", template.variables.join(', ')]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this)\n              }, template.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAddAccount,\n      onClose: () => setOpenAddAccount(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Email Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email Address\",\n            value: newAccount.email,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              email: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Display Name\",\n            value: newAccount.name,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              name: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Host\",\n            value: newAccount.smtp_host,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              smtp_host: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Port\",\n            value: newAccount.smtp_port,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              smtp_port: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Username\",\n            value: newAccount.smtp_username,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              smtp_username: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Password\",\n            type: \"password\",\n            value: newAccount.smtp_password,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              smtp_password: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"IMAP Host\",\n            value: newAccount.imap_host,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              imap_host: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"IMAP Port\",\n            value: newAccount.imap_port,\n            onChange: e => setNewAccount({\n              ...newAccount,\n              imap_port: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenAddAccount(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddAccount,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading,\n          startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(AccountIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 67\n          }, this),\n          children: \"Add Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openCompose,\n      onClose: () => setOpenCompose(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Compose Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newEmail.template_id,\n              onChange: e => handleTemplateSelect(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this), templates.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: template.id,\n                children: template.name\n              }, template.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"To\",\n            value: newEmail.to,\n            onChange: e => setNewEmail({\n              ...newEmail,\n              to: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Subject\",\n            value: newEmail.subject,\n            onChange: e => setNewEmail({\n              ...newEmail,\n              subject: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            value: newEmail.body,\n            onEditorChange: content => setNewEmail({\n              ...newEmail,\n              body: content\n            }),\n            init: {\n              height: 400,\n              menubar: false,\n              plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n              toolbar: 'undo redo | formatselect | bold italic backcolor | \\\n                  alignleft aligncenter alignright alignjustify | \\\n                  bullist numlist outdent indent | removeformat | help'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenCompose(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSendEmail,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading,\n          startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 67\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openTemplate,\n      onClose: () => setOpenTemplate(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create Email Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Template Name\",\n            value: newTemplate.name,\n            onChange: e => setNewTemplate({\n              ...newTemplate,\n              name: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Subject\",\n            value: newTemplate.subject,\n            onChange: e => setNewTemplate({\n              ...newTemplate,\n              subject: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            value: newTemplate.body,\n            onEditorChange: content => setNewTemplate({\n              ...newTemplate,\n              body: content\n            }),\n            init: {\n              height: 400,\n              menubar: false,\n              plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n              toolbar: 'undo redo | formatselect | bold italic backcolor | \\\n                  alignleft aligncenter alignright alignjustify | \\\n                  bullist numlist outdent indent | removeformat | help'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Variables (one per line)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: newTemplate.variables.join('\\n'),\n            onChange: e => setNewTemplate({\n              ...newTemplate,\n              variables: e.target.value.split('\\n').filter(v => v)\n            }),\n            multiline: true,\n            rows: 4,\n            fullWidth: true,\n            placeholder: \"Enter variables (e.g., {{client_name}}, {{amount}})\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenTemplate(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTemplate,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading,\n          startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 67\n          }, this),\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailManagement, \"DxonXSRzynFxiOLNn1af/kj9ThA=\");\n_c = EmailManagement;\nexport default EmailManagement;\nvar _c;\n$RefreshReg$(_c, \"EmailManagement\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Grid","Card","CardContent","Button","TextField","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","List","ListItem","ListItemText","ListItemSecondary","Chip","Divider","FormControl","InputLabel","Select","MenuItem","Snackbar","Alert","CircularProgress","Tabs","Tab","Paper","Add","AddIcon","Delete","DeleteIcon","Edit","EditIcon","Refresh","RefreshIcon","Send","SendIcon","Email","EmailIcon","AccountCircle","AccountIcon","Editor","axios","jsxDEV","_jsxDEV","API_BASE_URL","EmailManagement","_s","activeTab","setActiveTab","emailAccounts","setEmailAccounts","selectedAccount","setSelectedAccount","emails","setEmails","templates","setTemplates","openCompose","setOpenCompose","openTemplate","setOpenTemplate","openAddAccount","setOpenAddAccount","loading","setLoading","error","setError","success","setSuccess","newEmail","setNewEmail","to","subject","body","template_id","newTemplate","setNewTemplate","name","variables","newAccount","setNewAccount","email","smtp_host","smtp_port","smtp_username","smtp_password","imap_host","imap_port","fetchEmailAccounts","fetchEmails","fetchTemplates","response","get","data","length","id","console","handleAddAccount","post","handleSendEmail","handleSaveTemplate","handleTemplateSelect","templateId","template","find","t","children","open","autoHideDuration","onClose","severity","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","justifyContent","mb","variant","gutterBottom","color","onClick","startIcon","mr","disabled","container","spacing","item","xs","borderBottom","borderColor","value","onChange","e","newValue","scrollButtons","map","account","label","Fragment","primary","secondary","Date","sent_at","toLocaleString","status","size","sm","md","join","maxWidth","fullWidth","flexDirection","gap","mt","target","required","type","onEditorChange","content","init","height","menubar","plugins","toolbar","split","filter","v","multiline","rows","placeholder","_c","$RefreshReg$"],"sources":["c:/Users/p8tty/Downloads/agency-swarm-0.2.0/dashboard/frontend/src/components/EmailManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondary,\n  Chip,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Snackbar,\n  Alert,\n  CircularProgress,\n  Tabs,\n  Tab,\n  Paper,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Refresh as RefreshIcon,\n  Send as SendIcon,\n  Email as EmailIcon,\n  AccountCircle as AccountIcon,\n} from '@mui/icons-material';\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nfunction EmailManagement() {\n  const [activeTab, setActiveTab] = useState(0);\n  const [emailAccounts, setEmailAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [emails, setEmails] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const [openCompose, setOpenCompose] = useState(false);\n  const [openTemplate, setOpenTemplate] = useState(false);\n  const [openAddAccount, setOpenAddAccount] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const [newEmail, setNewEmail] = useState({\n    to: '',\n    subject: '',\n    body: '',\n    template_id: '',\n  });\n\n  const [newTemplate, setNewTemplate] = useState({\n    name: '',\n    subject: '',\n    body: '',\n    variables: [],\n  });\n\n  const [newAccount, setNewAccount] = useState({\n    email: '',\n    name: '',\n    smtp_host: '',\n    smtp_port: '',\n    smtp_username: '',\n    smtp_password: '',\n    imap_host: '',\n    imap_port: '',\n  });\n\n  useEffect(() => {\n    fetchEmailAccounts();\n    fetchEmails();\n    fetchTemplates();\n  }, [selectedAccount]);\n\n  const fetchEmailAccounts = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/accounts`);\n      setEmailAccounts(response.data);\n      if (response.data.length > 0 && !selectedAccount) {\n        setSelectedAccount(response.data[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching email accounts:', error);\n      setError('Failed to fetch email accounts');\n    }\n  };\n\n  const fetchEmails = async () => {\n    if (!selectedAccount) return;\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/messages/${selectedAccount}`);\n      setEmails(response.data);\n    } catch (error) {\n      console.error('Error fetching emails:', error);\n      setError('Failed to fetch emails');\n    }\n  };\n\n  const fetchTemplates = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/templates`);\n      setTemplates(response.data);\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n      setError('Failed to fetch templates');\n    }\n  };\n\n  const handleAddAccount = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/accounts`, newAccount);\n      setSuccess('Email account added successfully');\n      setOpenAddAccount(false);\n      setNewAccount({\n        email: '',\n        name: '',\n        smtp_host: '',\n        smtp_port: '',\n        smtp_username: '',\n        smtp_password: '',\n        imap_host: '',\n        imap_port: '',\n      });\n      fetchEmailAccounts();\n    } catch (error) {\n      console.error('Error adding email account:', error);\n      setError('Failed to add email account');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSendEmail = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/send/${selectedAccount}`, newEmail);\n      setSuccess('Email sent successfully');\n      setOpenCompose(false);\n      setNewEmail({\n        to: '',\n        subject: '',\n        body: '',\n        template_id: '',\n      });\n      fetchEmails();\n    } catch (error) {\n      console.error('Error sending email:', error);\n      setError('Failed to send email');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveTemplate = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/templates`, newTemplate);\n      setSuccess('Template saved successfully');\n      setOpenTemplate(false);\n      setNewTemplate({\n        name: '',\n        subject: '',\n        body: '',\n        variables: [],\n      });\n      fetchTemplates();\n    } catch (error) {\n      console.error('Error saving template:', error);\n      setError('Failed to save template');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTemplateSelect = (templateId) => {\n    const template = templates.find(t => t.id === templateId);\n    if (template) {\n      setNewEmail({\n        ...newEmail,\n        subject: template.subject,\n        body: template.body,\n        template_id: template.id,\n      });\n    }\n  };\n\n  return (\n    <Box>\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={() => setError('')}>\n        <Alert onClose={() => setError('')} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={!!success} autoHideDuration={6000} onClose={() => setSuccess('')}>\n        <Alert onClose={() => setSuccess('')} severity=\"success\">\n          {success}\n        </Alert>\n      </Snackbar>\n\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Email Management\n        </Typography>\n        <Box>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setOpenAddAccount(true)}\n            startIcon={<AccountIcon />}\n            sx={{ mr: 2 }}\n          >\n            Add Email Account\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setOpenCompose(true)}\n            startIcon={<SendIcon />}\n            sx={{ mr: 2 }}\n            disabled={!selectedAccount}\n          >\n            Compose\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setOpenTemplate(true)}\n            startIcon={<EditIcon />}\n          >\n            Create Template\n          </Button>\n        </Box>\n      </Box>\n\n      <Grid container spacing={3}>\n        {/* Email Accounts */}\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Email Accounts\n              </Typography>\n              <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n                <Tabs\n                  value={selectedAccount}\n                  onChange={(e, newValue) => setSelectedAccount(newValue)}\n                  variant=\"scrollable\"\n                  scrollButtons=\"auto\"\n                >\n                  {emailAccounts.map((account) => (\n                    <Tab\n                      key={account.id}\n                      label={`${account.name} (${account.email})`}\n                      value={account.id}\n                    />\n                  ))}\n                </Tabs>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Recent Emails */}\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Recent Emails\n              </Typography>\n              <List>\n                {emails.map((email) => (\n                  <React.Fragment key={email.id}>\n                    <ListItem>\n                      <ListItemText\n                        primary={email.subject}\n                        secondary={`To: ${email.to} | ${new Date(email.sent_at).toLocaleString()}`}\n                      />\n                      <Chip\n                        label={email.status}\n                        color={email.status === 'sent' ? 'success' : 'default'}\n                        size=\"small\"\n                      />\n                    </ListItem>\n                    <Divider />\n                  </React.Fragment>\n                ))}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Email Templates */}\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Email Templates\n              </Typography>\n              <Grid container spacing={2}>\n                {templates.map((template) => (\n                  <Grid item xs={12} sm={6} md={4} key={template.id}>\n                    <Card variant=\"outlined\">\n                      <CardContent>\n                        <Typography variant=\"subtitle1\">{template.name}</Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Variables: {template.variables.join(', ')}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Add Email Account Dialog */}\n      <Dialog\n        open={openAddAccount}\n        onClose={() => setOpenAddAccount(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Add Email Account</DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\n            <TextField\n              label=\"Email Address\"\n              value={newAccount.email}\n              onChange={(e) => setNewAccount({ ...newAccount, email: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"Display Name\"\n              value={newAccount.name}\n              onChange={(e) => setNewAccount({ ...newAccount, name: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"SMTP Host\"\n              value={newAccount.smtp_host}\n              onChange={(e) => setNewAccount({ ...newAccount, smtp_host: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"SMTP Port\"\n              value={newAccount.smtp_port}\n              onChange={(e) => setNewAccount({ ...newAccount, smtp_port: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"SMTP Username\"\n              value={newAccount.smtp_username}\n              onChange={(e) => setNewAccount({ ...newAccount, smtp_username: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"SMTP Password\"\n              type=\"password\"\n              value={newAccount.smtp_password}\n              onChange={(e) => setNewAccount({ ...newAccount, smtp_password: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"IMAP Host\"\n              value={newAccount.imap_host}\n              onChange={(e) => setNewAccount({ ...newAccount, imap_host: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"IMAP Port\"\n              value={newAccount.imap_port}\n              onChange={(e) => setNewAccount({ ...newAccount, imap_port: e.target.value })}\n              fullWidth\n              required\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenAddAccount(false)}>Cancel</Button>\n          <Button\n            onClick={handleAddAccount}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <AccountIcon />}\n          >\n            Add Account\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Compose Email Dialog */}\n      <Dialog\n        open={openCompose}\n        onClose={() => setOpenCompose(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Compose Email</DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\n            <FormControl fullWidth>\n              <InputLabel>Template</InputLabel>\n              <Select\n                value={newEmail.template_id}\n                onChange={(e) => handleTemplateSelect(e.target.value)}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {templates.map((template) => (\n                  <MenuItem key={template.id} value={template.id}>\n                    {template.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <TextField\n              label=\"To\"\n              value={newEmail.to}\n              onChange={(e) => setNewEmail({ ...newEmail, to: e.target.value })}\n              fullWidth\n              required\n            />\n\n            <TextField\n              label=\"Subject\"\n              value={newEmail.subject}\n              onChange={(e) => setNewEmail({ ...newEmail, subject: e.target.value })}\n              fullWidth\n              required\n            />\n\n            <Editor\n              value={newEmail.body}\n              onEditorChange={(content) => setNewEmail({ ...newEmail, body: content })}\n              init={{\n                height: 400,\n                menubar: false,\n                plugins: [\n                  'advlist autolink lists link image charmap print preview anchor',\n                  'searchreplace visualblocks code fullscreen',\n                  'insertdatetime media table paste code help wordcount'\n                ],\n                toolbar:\n                  'undo redo | formatselect | bold italic backcolor | \\\n                  alignleft aligncenter alignright alignjustify | \\\n                  bullist numlist outdent indent | removeformat | help'\n              }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenCompose(false)}>Cancel</Button>\n          <Button\n            onClick={handleSendEmail}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <SendIcon />}\n          >\n            Send\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Create Template Dialog */}\n      <Dialog\n        open={openTemplate}\n        onClose={() => setOpenTemplate(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Create Email Template</DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\n            <TextField\n              label=\"Template Name\"\n              value={newTemplate.name}\n              onChange={(e) => setNewTemplate({ ...newTemplate, name: e.target.value })}\n              fullWidth\n              required\n            />\n\n            <TextField\n              label=\"Subject\"\n              value={newTemplate.subject}\n              onChange={(e) => setNewTemplate({ ...newTemplate, subject: e.target.value })}\n              fullWidth\n              required\n            />\n\n            <Editor\n              value={newTemplate.body}\n              onEditorChange={(content) => setNewTemplate({ ...newTemplate, body: content })}\n              init={{\n                height: 400,\n                menubar: false,\n                plugins: [\n                  'advlist autolink lists link image charmap print preview anchor',\n                  'searchreplace visualblocks code fullscreen',\n                  'insertdatetime media table paste code help wordcount'\n                ],\n                toolbar:\n                  'undo redo | formatselect | bold italic backcolor | \\\n                  alignleft aligncenter alignright alignjustify | \\\n                  bullist numlist outdent indent | removeformat | help'\n              }}\n            />\n\n            <Typography variant=\"subtitle2\" gutterBottom>\n              Variables (one per line)\n            </Typography>\n            <TextField\n              value={newTemplate.variables.join('\\n')}\n              onChange={(e) => setNewTemplate({ ...newTemplate, variables: e.target.value.split('\\n').filter(v => v) })}\n              multiline\n              rows={4}\n              fullWidth\n              placeholder=\"Enter variables (e.g., {{client_name}}, {{amount}})\"\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenTemplate(false)}>Cancel</Button>\n          <Button\n            onClick={handleSaveTemplate}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <EditIcon />}\n          >\n            Save Template\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default EmailManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}