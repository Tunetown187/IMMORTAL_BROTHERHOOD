{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\p8tty\\\\Downloads\\\\agency-swarm-0.2.0\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EmailManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Typography, Button, TextField, Dialog, DialogTitle, DialogContent, DialogActions, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Grid, Card, CardContent, Select, MenuItem, FormControl, InputLabel, Tabs, Tab, Alert, Snackbar, CircularProgress, Chip, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Send as SendIcon, FileCopy as FileCopyIcon, CloudUpload as CloudUploadIcon } from '@mui/icons-material';\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nconst TEMPLATE_CATEGORIES = ['Onboarding', 'Meetings', 'Billing', 'Project Management', 'Sales', 'Marketing', 'Support', 'General'];\nfunction EmailManagement() {\n  _s();\n  const [activeTab, setActiveTab] = useState(0);\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [openTemplateDialog, setOpenTemplateDialog] = useState(false);\n  const [openBulkEmailDialog, setOpenBulkEmailDialog] = useState(false);\n  const [bulkEmailJobs, setBulkEmailJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const fileInputRef = useRef();\n  const [templateForm, setTemplateForm] = useState({\n    name: '',\n    subject: '',\n    body: '',\n    category: 'General',\n    variables: []\n  });\n  const [bulkEmailForm, setbulkEmailForm] = useState({\n    templateId: '',\n    csvFile: null\n  });\n  useEffect(() => {\n    fetchTemplates();\n    fetchBulkEmailJobs();\n  }, []);\n  const fetchTemplates = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/templates`);\n      setTemplates(response.data);\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n      setError('Failed to fetch email templates');\n    }\n  };\n  const fetchBulkEmailJobs = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/bulk`);\n      setBulkEmailJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching bulk email jobs:', error);\n    }\n  };\n  const handleCreateTemplate = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/templates`, templateForm);\n      setSuccess('Template created successfully');\n      setOpenTemplateDialog(false);\n      fetchTemplates();\n      resetTemplateForm();\n    } catch (error) {\n      console.error('Error creating template:', error);\n      setError('Failed to create template');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUpdateTemplate = async () => {\n    try {\n      setLoading(true);\n      await axios.put(`${API_BASE_URL}/email/templates/${selectedTemplate.id}`, templateForm);\n      setSuccess('Template updated successfully');\n      setOpenTemplateDialog(false);\n      fetchTemplates();\n      resetTemplateForm();\n    } catch (error) {\n      console.error('Error updating template:', error);\n      setError('Failed to update template');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteTemplate = async templateId => {\n    if (!window.confirm('Are you sure you want to delete this template?')) return;\n    try {\n      setLoading(true);\n      await axios.delete(`${API_BASE_URL}/email/templates/${templateId}`);\n      setSuccess('Template deleted successfully');\n      fetchTemplates();\n    } catch (error) {\n      console.error('Error deleting template:', error);\n      setError('Failed to delete template');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleBulkEmail = async () => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('template_id', bulkEmailForm.templateId);\n      formData.append('csv_file', bulkEmailForm.csvFile);\n      const response = await axios.post(`${API_BASE_URL}/email/bulk`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSuccess('Bulk email job created successfully');\n      setOpenBulkEmailDialog(false);\n      fetchBulkEmailJobs();\n      resetBulkEmailForm();\n    } catch (error) {\n      console.error('Error creating bulk email job:', error);\n      setError('Failed to create bulk email job');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetTemplateForm = () => {\n    setTemplateForm({\n      name: '',\n      subject: '',\n      body: '',\n      category: 'General',\n      variables: []\n    });\n    setSelectedTemplate(null);\n  };\n  const resetBulkEmailForm = () => {\n    setbulkEmailForm({\n      templateId: '',\n      csvFile: null\n    });\n  };\n  const handleEditTemplate = template => {\n    setSelectedTemplate(template);\n    setTemplateForm({\n      name: template.name,\n      subject: template.subject,\n      body: template.body,\n      category: template.category,\n      variables: template.variables\n    });\n    setOpenTemplateDialog(true);\n  };\n  const handleAddVariable = () => {\n    const variable = prompt('Enter variable name:');\n    if (variable) {\n      setTemplateForm(prev => ({\n        ...prev,\n        variables: [...prev.variables, variable]\n      }));\n    }\n  };\n  const renderTemplatesTab = () => /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Email Templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 22\n        }, this),\n        onClick: () => {\n          resetTemplateForm();\n          setOpenTemplateDialog(true);\n        },\n        children: \"Create Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: templates.map(template => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: template.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: [\"Category: \", template.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: [\"Subject: \", template.subject]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: template.variables.map((variable, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                display: 'flex',\n                justifyContent: 'flex-end'\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleEditTemplate(template),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleDeleteTemplate(template.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)\n      }, template.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openTemplateDialog,\n      onClose: () => setOpenTemplateDialog(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: selectedTemplate ? 'Edit Template' : 'Create Template'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Template Name\",\n              value: templateForm.name,\n              onChange: e => setTemplateForm(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              fullWidth: true,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"normal\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: templateForm.category,\n                onChange: e => setTemplateForm(prev => ({\n                  ...prev,\n                  category: e.target.value\n                })),\n                children: TEMPLATE_CATEGORIES.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category,\n                  children: category\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Subject\",\n              value: templateForm.subject,\n              onChange: e => setTemplateForm(prev => ({\n                ...prev,\n                subject: e.target.value\n              })),\n              fullWidth: true,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: \"Template Variables:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1,\n                mb: 2\n              },\n              children: [templateForm.variables.map((variable, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                label: variable,\n                onDelete: () => {\n                  const newVariables = [...templateForm.variables];\n                  newVariables.splice(index, 1);\n                  setTemplateForm(prev => ({\n                    ...prev,\n                    variables: newVariables\n                  }));\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 30\n                }, this),\n                onClick: handleAddVariable,\n                children: \"Add Variable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: \"Email Body:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Editor, {\n              apiKey: \"your-tinymce-api-key\",\n              value: templateForm.body,\n              init: {\n                height: 400,\n                menubar: true,\n                plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n                toolbar: 'undo redo | blocks | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help'\n              },\n              onEditorChange: content => setTemplateForm(prev => ({\n                ...prev,\n                body: content\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenTemplateDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: selectedTemplate ? handleUpdateTemplate : handleCreateTemplate,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 24\n          }, this) : selectedTemplate ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n  const renderBulkEmailTab = () => /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Bulk Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 22\n        }, this),\n        onClick: () => setOpenBulkEmailDialog(true),\n        children: \"New Bulk Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total Emails\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Failed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: bulkEmailJobs.map(job => {\n            var _templates$find;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: ((_templates$find = templates.find(t => t.id === job.template_id)) === null || _templates$find === void 0 ? void 0 : _templates$find.name) || 'Unknown Template'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: job.status,\n                  color: job.status === 'completed' ? 'success' : job.status === 'failed' ? 'error' : 'warning',\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: job.total_emails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: job.sent_emails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: job.failed_emails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(job.created_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)]\n            }, job.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openBulkEmailDialog,\n      onClose: () => setOpenBulkEmailDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"New Bulk Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Email Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: bulkEmailForm.templateId,\n            onChange: e => setbulkEmailForm(prev => ({\n              ...prev,\n              templateId: e.target.value\n            })),\n            children: templates.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: template.id,\n              children: template.name\n            }, template.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            },\n            onChange: e => setbulkEmailForm(prev => ({\n              ...prev,\n              csvFile: e.target.files[0]\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 26\n            }, this),\n            onClick: () => fileInputRef.current.click(),\n            fullWidth: true,\n            children: \"Upload CSV File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), bulkEmailForm.csvFile && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 1\n            },\n            children: [\"Selected file: \", bulkEmailForm.csvFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 2\n          },\n          children: \"CSV file should contain the following columns: email, first_name, and any other variables used in the selected template.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenBulkEmailDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBulkEmail,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading || !bulkEmailForm.templateId || !bulkEmailForm.csvFile,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 24\n          }, this) : 'Send Emails'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(''),\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 6000,\n      onClose: () => setSuccess(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSuccess(''),\n        severity: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Email Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider',\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: (e, newValue) => setActiveTab(newValue),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Bulk Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this), activeTab === 0 && renderTemplatesTab(), activeTab === 1 && renderBulkEmailTab()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailManagement, \"psIIWqBWzigIs1HNe9tSaQGIMEs=\");\n_c = EmailManagement;\nexport default EmailManagement;\nvar _c;\n$RefreshReg$(_c, \"EmailManagement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Typography","Button","TextField","Dialog","DialogTitle","DialogContent","DialogActions","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Grid","Card","CardContent","Select","MenuItem","FormControl","InputLabel","Tabs","Tab","Alert","Snackbar","CircularProgress","Chip","Divider","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Send","SendIcon","FileCopy","FileCopyIcon","CloudUpload","CloudUploadIcon","Editor","axios","jsxDEV","_jsxDEV","API_BASE_URL","TEMPLATE_CATEGORIES","EmailManagement","_s","activeTab","setActiveTab","templates","setTemplates","selectedTemplate","setSelectedTemplate","openTemplateDialog","setOpenTemplateDialog","openBulkEmailDialog","setOpenBulkEmailDialog","bulkEmailJobs","setBulkEmailJobs","loading","setLoading","error","setError","success","setSuccess","fileInputRef","templateForm","setTemplateForm","name","subject","body","category","variables","bulkEmailForm","setbulkEmailForm","templateId","csvFile","fetchTemplates","fetchBulkEmailJobs","response","get","data","console","handleCreateTemplate","post","resetTemplateForm","handleUpdateTemplate","put","id","handleDeleteTemplate","window","confirm","delete","handleBulkEmail","formData","FormData","append","headers","resetBulkEmailForm","handleEditTemplate","template","handleAddVariable","variable","prompt","prev","renderTemplatesTab","children","sx","mb","display","justifyContent","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","startIcon","onClick","container","spacing","map","item","xs","md","gutterBottom","mt","flexWrap","gap","index","label","size","open","onClose","maxWidth","fullWidth","value","onChange","e","target","margin","onDelete","newVariables","splice","apiKey","init","height","menubar","plugins","toolbar","onEditorChange","content","disabled","renderBulkEmailTab","component","job","_templates$find","find","t","template_id","status","total_emails","sent_emails","failed_emails","Date","created_at","toLocaleString","type","accept","ref","style","files","current","click","severity","autoHideDuration","borderBottom","borderColor","newValue","_c","$RefreshReg$"],"sources":["c:/Users/p8tty/Downloads/agency-swarm-0.2.0/dashboard/frontend/src/components/EmailManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Grid,\n  Card,\n  CardContent,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Tabs,\n  Tab,\n  Alert,\n  Snackbar,\n  CircularProgress,\n  Chip,\n  Divider,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Send as SendIcon,\n  FileCopy as FileCopyIcon,\n  CloudUpload as CloudUploadIcon,\n} from '@mui/icons-material';\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nconst TEMPLATE_CATEGORIES = [\n  'Onboarding',\n  'Meetings',\n  'Billing',\n  'Project Management',\n  'Sales',\n  'Marketing',\n  'Support',\n  'General',\n];\n\nfunction EmailManagement() {\n  const [activeTab, setActiveTab] = useState(0);\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [openTemplateDialog, setOpenTemplateDialog] = useState(false);\n  const [openBulkEmailDialog, setOpenBulkEmailDialog] = useState(false);\n  const [bulkEmailJobs, setBulkEmailJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const fileInputRef = useRef();\n\n  const [templateForm, setTemplateForm] = useState({\n    name: '',\n    subject: '',\n    body: '',\n    category: 'General',\n    variables: [],\n  });\n\n  const [bulkEmailForm, setbulkEmailForm] = useState({\n    templateId: '',\n    csvFile: null,\n  });\n\n  useEffect(() => {\n    fetchTemplates();\n    fetchBulkEmailJobs();\n  }, []);\n\n  const fetchTemplates = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/templates`);\n      setTemplates(response.data);\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n      setError('Failed to fetch email templates');\n    }\n  };\n\n  const fetchBulkEmailJobs = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/email/bulk`);\n      setBulkEmailJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching bulk email jobs:', error);\n    }\n  };\n\n  const handleCreateTemplate = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_BASE_URL}/email/templates`, templateForm);\n      setSuccess('Template created successfully');\n      setOpenTemplateDialog(false);\n      fetchTemplates();\n      resetTemplateForm();\n    } catch (error) {\n      console.error('Error creating template:', error);\n      setError('Failed to create template');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUpdateTemplate = async () => {\n    try {\n      setLoading(true);\n      await axios.put(`${API_BASE_URL}/email/templates/${selectedTemplate.id}`, templateForm);\n      setSuccess('Template updated successfully');\n      setOpenTemplateDialog(false);\n      fetchTemplates();\n      resetTemplateForm();\n    } catch (error) {\n      console.error('Error updating template:', error);\n      setError('Failed to update template');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteTemplate = async (templateId) => {\n    if (!window.confirm('Are you sure you want to delete this template?')) return;\n    \n    try {\n      setLoading(true);\n      await axios.delete(`${API_BASE_URL}/email/templates/${templateId}`);\n      setSuccess('Template deleted successfully');\n      fetchTemplates();\n    } catch (error) {\n      console.error('Error deleting template:', error);\n      setError('Failed to delete template');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBulkEmail = async () => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('template_id', bulkEmailForm.templateId);\n      formData.append('csv_file', bulkEmailForm.csvFile);\n\n      const response = await axios.post(`${API_BASE_URL}/email/bulk`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setSuccess('Bulk email job created successfully');\n      setOpenBulkEmailDialog(false);\n      fetchBulkEmailJobs();\n      resetBulkEmailForm();\n    } catch (error) {\n      console.error('Error creating bulk email job:', error);\n      setError('Failed to create bulk email job');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetTemplateForm = () => {\n    setTemplateForm({\n      name: '',\n      subject: '',\n      body: '',\n      category: 'General',\n      variables: [],\n    });\n    setSelectedTemplate(null);\n  };\n\n  const resetBulkEmailForm = () => {\n    setbulkEmailForm({\n      templateId: '',\n      csvFile: null,\n    });\n  };\n\n  const handleEditTemplate = (template) => {\n    setSelectedTemplate(template);\n    setTemplateForm({\n      name: template.name,\n      subject: template.subject,\n      body: template.body,\n      category: template.category,\n      variables: template.variables,\n    });\n    setOpenTemplateDialog(true);\n  };\n\n  const handleAddVariable = () => {\n    const variable = prompt('Enter variable name:');\n    if (variable) {\n      setTemplateForm(prev => ({\n        ...prev,\n        variables: [...prev.variables, variable],\n      }));\n    }\n  };\n\n  const renderTemplatesTab = () => (\n    <Box>\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between' }}>\n        <Typography variant=\"h6\">Email Templates</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            resetTemplateForm();\n            setOpenTemplateDialog(true);\n          }}\n        >\n          Create Template\n        </Button>\n      </Box>\n\n      <Grid container spacing={3}>\n        {templates.map((template) => (\n          <Grid item xs={12} md={6} key={template.id}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  {template.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                  Category: {template.category}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                  Subject: {template.subject}\n                </Typography>\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Variables:\n                  </Typography>\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                    {template.variables.map((variable, index) => (\n                      <Chip key={index} label={variable} size=\"small\" />\n                    ))}\n                  </Box>\n                </Box>\n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n                  <IconButton onClick={() => handleEditTemplate(template)}>\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton onClick={() => handleDeleteTemplate(template.id)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      <Dialog\n        open={openTemplateDialog}\n        onClose={() => setOpenTemplateDialog(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          {selectedTemplate ? 'Edit Template' : 'Create Template'}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Template Name\"\n                value={templateForm.name}\n                onChange={(e) => setTemplateForm(prev => ({ ...prev, name: e.target.value }))}\n                fullWidth\n                margin=\"normal\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel>Category</InputLabel>\n                <Select\n                  value={templateForm.category}\n                  onChange={(e) => setTemplateForm(prev => ({ ...prev, category: e.target.value }))}\n                >\n                  {TEMPLATE_CATEGORIES.map((category) => (\n                    <MenuItem key={category} value={category}>\n                      {category}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Subject\"\n                value={templateForm.subject}\n                onChange={(e) => setTemplateForm(prev => ({ ...prev, subject: e.target.value }))}\n                fullWidth\n                margin=\"normal\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Template Variables:\n              </Typography>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n                {templateForm.variables.map((variable, index) => (\n                  <Chip\n                    key={index}\n                    label={variable}\n                    onDelete={() => {\n                      const newVariables = [...templateForm.variables];\n                      newVariables.splice(index, 1);\n                      setTemplateForm(prev => ({ ...prev, variables: newVariables }));\n                    }}\n                  />\n                ))}\n                <Button\n                  size=\"small\"\n                  startIcon={<AddIcon />}\n                  onClick={handleAddVariable}\n                >\n                  Add Variable\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Email Body:\n              </Typography>\n              <Editor\n                apiKey=\"your-tinymce-api-key\"\n                value={templateForm.body}\n                init={{\n                  height: 400,\n                  menubar: true,\n                  plugins: [\n                    'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                    'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                    'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n                  ],\n                  toolbar: 'undo redo | blocks | ' +\n                    'bold italic forecolor | alignleft aligncenter ' +\n                    'alignright alignjustify | bullist numlist outdent indent | ' +\n                    'removeformat | help',\n                }}\n                onEditorChange={(content) => setTemplateForm(prev => ({ ...prev, body: content }))}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenTemplateDialog(false)}>Cancel</Button>\n          <Button\n            onClick={selectedTemplate ? handleUpdateTemplate : handleCreateTemplate}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={24} /> : selectedTemplate ? 'Update' : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n\n  const renderBulkEmailTab = () => (\n    <Box>\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between' }}>\n        <Typography variant=\"h6\">Bulk Email</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<CloudUploadIcon />}\n          onClick={() => setOpenBulkEmailDialog(true)}\n        >\n          New Bulk Email\n        </Button>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Template</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Total Emails</TableCell>\n              <TableCell>Sent</TableCell>\n              <TableCell>Failed</TableCell>\n              <TableCell>Created At</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bulkEmailJobs.map((job) => (\n              <TableRow key={job.id}>\n                <TableCell>\n                  {templates.find(t => t.id === job.template_id)?.name || 'Unknown Template'}\n                </TableCell>\n                <TableCell>\n                  <Chip\n                    label={job.status}\n                    color={\n                      job.status === 'completed' ? 'success' :\n                      job.status === 'failed' ? 'error' :\n                      'warning'\n                    }\n                    size=\"small\"\n                  />\n                </TableCell>\n                <TableCell>{job.total_emails}</TableCell>\n                <TableCell>{job.sent_emails}</TableCell>\n                <TableCell>{job.failed_emails}</TableCell>\n                <TableCell>{new Date(job.created_at).toLocaleString()}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Dialog\n        open={openBulkEmailDialog}\n        onClose={() => setOpenBulkEmailDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>New Bulk Email</DialogTitle>\n        <DialogContent>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Email Template</InputLabel>\n            <Select\n              value={bulkEmailForm.templateId}\n              onChange={(e) => setbulkEmailForm(prev => ({ ...prev, templateId: e.target.value }))}\n            >\n              {templates.map((template) => (\n                <MenuItem key={template.id} value={template.id}>\n                  {template.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Box sx={{ mt: 3 }}>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              ref={fileInputRef}\n              style={{ display: 'none' }}\n              onChange={(e) => setbulkEmailForm(prev => ({ ...prev, csvFile: e.target.files[0] }))}\n            />\n            <Button\n              variant=\"outlined\"\n              startIcon={<CloudUploadIcon />}\n              onClick={() => fileInputRef.current.click()}\n              fullWidth\n            >\n              Upload CSV File\n            </Button>\n            {bulkEmailForm.csvFile && (\n              <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                Selected file: {bulkEmailForm.csvFile.name}\n              </Typography>\n            )}\n          </Box>\n\n          <Alert severity=\"info\" sx={{ mt: 2 }}>\n            CSV file should contain the following columns: email, first_name, and any other variables used in the selected template.\n          </Alert>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenBulkEmailDialog(false)}>Cancel</Button>\n          <Button\n            onClick={handleBulkEmail}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || !bulkEmailForm.templateId || !bulkEmailForm.csvFile}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Send Emails'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n\n  return (\n    <Box>\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={() => setError('')}>\n        <Alert onClose={() => setError('')} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={!!success} autoHideDuration={6000} onClose={() => setSuccess('')}>\n        <Alert onClose={() => setSuccess('')} severity=\"success\">\n          {success}\n        </Alert>\n      </Snackbar>\n\n      <Typography variant=\"h4\" gutterBottom>\n        Email Management\n      </Typography>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\n          <Tab label=\"Templates\" />\n          <Tab label=\"Bulk Email\" />\n        </Tabs>\n      </Box>\n\n      {activeTab === 0 && renderTemplatesTab()}\n      {activeTab === 1 && renderBulkEmailTab()}\n    </Box>\n  );\n}\n\nexport default EmailManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}